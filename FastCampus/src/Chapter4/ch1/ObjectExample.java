package Chapter4.ch1;

public class ObjectExample {
	/*
	java.lang 패키지
	
	-프로그래밍시 import 하지 않아도 자동으로 imort된다.
	-Object클래스는 모든클래스중에 최상위 클래스이다 => 모든클래스는 Object로부터 상속받는다.
	-Object클래스에의해 상속받기 때문에 => 모든 클래스는 Object클래스에 정의된 메서드를 실행 할 수 있다
	-단) final로 지정된 Object클래스의 메서드는 오버라이딩하기가 힘들다.		
	-import.java.lang.*;
	-많이 사용하는 기본 클래스들이 속한 패키지
	-String, Integer, System...
	*/
	
	/*
	 equals() 메서드
	 -두 인스턴스의 주소 값을 비교하여 true/false를 반환
	 -두 인스턴스가 같다 = 두 참조변수의 주소값이 동일하다.
	 -원래 "=="라는 기호는 주소값을 비교하는 연산자이다.
	 -여기선 오버라이딩을해서 값이 같으면 true/false을 반환하도록 하자
	 -주소를 hash값이라 한다. 관리하는 방식이 hash방식이라 그럼
	 -재정의 하여 두 인스턴스가 논리적으로 동일함의 여부를 구현함

	 -인스턴스가 다르더라도 논리적으로 동일한 경우 true를 반환하도록 재정의 할 수 있음
	  (같은 학번, 같은 사번, 같은 아이디의 회원...)
	 */
	
	/*
	 hashCode() 메서드
	 
	 -hashCode()는 인스턴스의 저장 주소를 반환함
	 -힙메모리에 인스턴스가 저장되는 방식이 hash 방식
	 -hash : 정보를 저장, 검색하는 자료구조
	 -자료의 특정 값(키 값)에 대한 저장 위치를 반환해주는 해시 함수를 사용

	 */
	/*
	 clone() 메서드
	 
	 -객체의 원본을 복제하는데 사용하는 메서드
	 -생성과정의 복잡한 과정을 반복하지 않고 복제 할 수 있음
	 -clone()메서드를 사용하면 객체의 정보(멤버 변수 값등...)가 동일한 또 다른 인스턴스가 생성되는 것이므로, 객체 지향 프로그램에서의 정보 은닉, 객체 보호의 관점에서 위배될 수 있음
	 -해당 클래스의 clone() 메서드의 사용을 허용한다는 의미로 cloneable 인터페이스를 명시해 줌
	 */
}
